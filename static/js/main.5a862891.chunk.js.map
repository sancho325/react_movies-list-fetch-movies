{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","handleAddMovie","useState","userQuery","setUserQuery","isError","setIsError","foundMovie","setFoundMovie","isLoading","setIsLoading","createMovie","Title","Plot","Poster","imdbID","handleSubmit","event","a","preventDefault","query","fetch","then","res","json","catch","Response","Error","htmlFor","type","id","placeholder","value","onChange","target","disabled","length","onClick","App","setMovie","some","newMovie","prevMovie","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5a862891.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { useState } from 'react';\nimport { getMovie } from '../../api';\nimport { Movie } from '../../types/Movie';\nimport { MovieData } from '../../types/MovieData';\nimport { MovieCard } from '../MovieCard';\nimport './FindMovie.scss';\n\ntype Props = {\n  handleAddMovie: (movie: Movie) => void,\n};\n\nexport const FindMovie: React.FC<Props> = ({ handleAddMovie }) => {\n  const [userQuery, setUserQuery] = useState('');\n  const [isError, setIsError] = useState(false);\n  const [foundMovie, setFoundMovie] = useState<Movie | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const createMovie = (movie: MovieData) => {\n    const {\n      Title,\n      Plot,\n      Poster,\n      imdbID,\n    } = movie;\n\n    setFoundMovie({\n      title: Title,\n      description: Plot,\n      imdbId: imdbID,\n      imdbUrl: `https://www.imdb.com/title/${imdbID}`,\n      imgUrl: Poster === 'N/A'\n        ? 'https://via.placeholder.com/360x270.png?text=no%20preview'\n        : Poster,\n    });\n  };\n\n  const handleSubmit = async (\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>,\n  ) => {\n    event.preventDefault();\n    setIsLoading(true);\n\n    await getMovie(userQuery)\n      .then(movies => {\n        if ('Error' in movies) {\n          setIsError(true);\n        } else {\n          createMovie(movies);\n          setIsError(false);\n        }\n      });\n\n    setIsLoading(false);\n  };\n\n  const handleReset = () => {\n    if (foundMovie) {\n      handleAddMovie(foundMovie);\n      setUserQuery('');\n      setFoundMovie(null);\n    }\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-dander\"\n              value={userQuery}\n              onChange={(event) => setUserQuery(event.target.value)}\n            />\n          </div>\n\n          {isError && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={isLoading\n                ? 'button is-light is-loading'\n                : 'button is-light'}\n              disabled={userQuery.length <= 0}\n              onClick={(event) => handleSubmit(event)}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            {foundMovie\n              && (\n                <button\n                  data-cy=\"addButton\"\n                  type=\"button\"\n                  className=\"button is-primary\"\n                  onClick={handleReset}\n                >\n                  Add to the list\n                </button>\n              )}\n          </div>\n        </div>\n      </form>\n\n      {foundMovie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={foundMovie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=ca954571';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovie] = useState<Movie[]>([]);\n\n  const handleAddMovie = (movie: Movie) => {\n    if (!movies.some(newMovie => newMovie.imdbId === movie.imdbId)) {\n      setMovie(prevMovie => [...prevMovie, movie]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie handleAddMovie={handleAddMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}